# =========================
# .env.example (README-ready)
# Fill BYBIT_API_KEY/SECRET with your own keys. Do NOT commit your real .env.
# Boolean values: true/false (case-insensitive). Numbers use dots (e.g., 0.0100).
# =========================

# === Keys / Network ===
BYBIT_API_KEY=                # Your Bybit API key (API KEY PERMISSION: Write/Read; UNIFIED TRADING/SPOT: Trade; ASSETS/EXCHANGE: Convert,Exchange History)
BYBIT_API_SECRET=             # Your Bybit API secret
TESTNET=false                 # Use Bybit Testnet? true = testnet.api.bybit.com, false = mainnet

# === Fees / Timing ===
FEE_RATE=0.001                # Maker/taker fee rate used for NET TP/PNL math (e.g., 0.001 = 0.1%)
POLL_INTERVAL=3               # Main loop sleep (seconds) between checks per symbol
COOLDOWN_AFTER_TP=1           # Short cooldown (seconds) after a TP sell to avoid immediate re-entry

# === Budget & Risk (defaults applied to all symbols unless overridden) ===
BASE_QUOTE_PER_TRADE=12       # Quote amount per trade in USDT (bot buys ~this notional each entry)
TP_NET_DEFAULT=0.0100         # Target NET take-profit (after both fees), e.g., 0.0100 = +1.00%
SL_DEFAULT=0.0060             # Stop-loss percent from entry (gross), e.g., 0.0060 = -0.60%
SYMBOL_PARAMS_JSON={}         # Per-symbol overrides as JSON (TP_NET/SL/QUOTE). Example:
                              # {"BTCUSDT":{"TP_NET":0.006,"SL":0.004,"QUOTE":10}}

# (Optional) Manual symbols list. Leave UNSET when using gainers.
# SYMBOLS=BTCUSDT,SOLUSDT     # Comma-separated symbols if USE_TOP_GAINERS=false

# === Gainers (dynamic symbol picker) ===
USE_TOP_GAINERS=true          # true = auto-pick symbols; false = use SYMBOLS
TOP_GAINERS_COUNT=6           # How many symbols to trade from screener
TOP_GAINERS_MIN_VOL_USDT=2000000  # Min 24h turnover (USDT) to filter illiquid pairs
TOP_GAINERS_QUOTE=USDT        # Quote currency to target (USDT pairs only)
SYMBOLS_FALLBACK=BTCUSDT,SOLUSDT  # Fallback list if screener returns nothing

# === Limits / Safety ===
MAX_TRADES_PER_SYMBOL=1       # Max concurrently open positions per symbol
MAX_TRADES_TOTAL=3            # Max concurrently open positions across ALL symbols
MIN_USDT_RESERVE=5            # Keep at least this much USDT free; don’t spend below it
SERIAL_SL_LIMIT=2             # After this many consecutive SL on a symbol → cooldown kicks in
SERIAL_SL_COOLDOWN_MIN=2      # Cooldown minutes after SERIAL_SL_LIMIT is hit (per symbol)
DAILY_LOSS_LIMIT=2            # Stop opening new trades if daily PnL <= -this (USDT); 0 disables
DAILY_LOSS_COOLDOWN_MIN=60    # Minutes to pause after daily loss limit is reached

# === Housekeeping / Resets ===
RESET_UTC=true                # Reset daily counters at 00:00 UTC
STARTUP_CLEANUP=true          # On startup, try to sell leftover “tails” (dust) if profitable
CLEANUP_TP_NET=0.0030         # Required NET edge for cleanup sells (e.g., 0.0030 = +0.30%)
EMERGENCY_TOPUP=true          # If not enough USDT for min order, try selling a bit of held base (FIFO)
QUIET=true                    # true = minimal logs; false = verbose
BACKOFF_NO_USDT_MIN=10        # Backoff minutes after “Insufficient balance” to avoid API spam
LOG_FILE=trades.csv           # CSV trade log path (created if missing)

# === Screener knobs (some used now, others future-proof) ===
SCREENER_SPREAD_BPS_MAX=6     # Max bid-ask spread in basis points (6 = 0.06%)
SCREENER_EMA_FAST=9           # Fast EMA length for 5m trend check
SCREENER_EMA_SLOW=21          # Slow EMA length for 5m trend check
SCREENER_ATR_MIN_BP=40        # Minimum ATR(5m) in bps (40 = ~0.40% volatility)
SCREENER_REFRESH_MIN=15       # Refresh interval (minutes) to re-pick gainers

# === Live Sales Feed (console) ===
SALES_FEED_ON=true            # Print a rolling block of the most recent SELLs automatically
SALES_FEED_INTERVAL_SEC=10    # How often to check for new sells (seconds)
SALES_FEED_COUNT=10           # How many recent sells to display in the block
SALES_FEED_INCLUDE_CLEANUP=true  # Include cleanup sells in the feed? true/false

# === Trailing (currently not used in this code path; safe to keep) ===
TRAIL_ON=true                 # Enable trailing TP? (placeholder)
TRAIL_ARM=0.6                 # Arm when % to TP reached (e.g., 0.6 = 60%)
TRAIL_TAIL=0.0025             # Trail tail size (e.g., 0.25%)

# === Developer / Debug (optional) ===
# VERBOSE_API_ERRORS=true     # true = include full “Request → …” payloads in API error logs
